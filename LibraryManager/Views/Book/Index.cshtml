@model BookViewModel
@{
    var borrows = ViewData["Borrows"] as List<BorrowViewModel>;
    ReaderViewModel reader = new ReaderViewModel();
    BorrowViewModel currentBorrow = new BorrowViewModel(); 
    if(Model.IsBorrowed)
    {
        currentBorrow = borrows.FirstOrDefault(x => !x.IsReturned);
        reader = currentBorrow.Reader;
    }

    var borrowsHistory = borrows.Where(x => x.IsReturned).ToList();
}


<h1>
    @Model.Title
    <small class="text-muted fw-light">#@Model.Id</small>
</h1> 
<h5>Author: <i class="fw-normal">@(Model.Author.FirstName + " " + Model.Author.LastName)</i></h5>
<h5>Publication year: <i class="fw-normal">@Model.PublishYear</i></h5>
<a class="text-decoration-none" onclick="location.href = '@Url.Action("Delete", "Book", new {bookId = Model.Id})'"><small class="text-danger fw-bold">Delete</small></a>
<hr />

    @if(Model.IsBorrowed)
    {
        <p>The book is currently <text class="text-danger fw-bold">borrowed</text>
        by <b>@(reader.FirstName + " " + reader.LastName)</b> since @currentBorrow.BorrowDate.ToString("dd MMMM yyyy") 
        and should be returned by @currentBorrow.ReturnDeadline.ToString("dd MMMM yyyy").</p>
    }
    else
    {
        <p>The book is currently <text class="text-success fw-bold">unborrowed</text>.</p>
    }

<h4>History of borrows</h4>

<hr />

<table class="table">
    <thead>
        <tr>
            <th>Reader</th>
            <th>Borrow date</th>
            <th>Return deadline</th>
            <th>Return date</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var borrow in borrowsHistory)
        {
            <tr>
                <td>@(borrow.Reader.FirstName + " " + borrow.Reader.LastName)</td>
                <td>@borrow.BorrowDate.ToString("dd MMMM yyyy")</td>
                <td>@borrow.ReturnDeadline.ToString("dd MMMM yyyy")</td>
                <td>@(((DateTime)borrow.ReturnDate).ToString("dd MMMM yyyy"))</td>
            </tr>
        }
    </tbody>
</table>

@if (borrowsHistory.Count == 0)
{
    <p>Nothing to show here!</p>
}