@model ReaderViewModel
@{
    ViewData["Title"] = Model.FirstName + " " + Model.LastName;
    var borrows = ViewData["Borrows"] as IEnumerable<BorrowViewModel>;

    var currentBorrows = borrows.Where(x => !x.IsReturned);
    var borrowsHistory = borrows.Where(x => x.IsReturned);

}

<h1>
    @(Model.FirstName + " " + Model.LastName)
    <small class="text-muted fw-light">#@Model.Id</small>
</h1> 
<h5>Birthdate: <i class="fw-normal">@Model.Birthdate.ToString("dd MMMM yyyy")</i></h5>
<a class="text-decoration-none" onclick="location.href = '@Url.Action("Delete", "Reader", new {readerId = Model.Id})'"><small class="text-danger fw-bold">Delete</small></a>
<hr />

<h4>Current borrows <small class="text-muted">(@currentBorrows.Count())</small></h4>
<hr />

<table class="table">
    <thead>
        <tr>
            <th>Book title</th>
            <th>Borrow date</th>
            <th>Return deadline</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var borrow in currentBorrows)
        {
        <tr class="not-clickable">
            <td>@borrow.Book.Title</td>
            <td>@borrow.BorrowDate.ToString("dd MMMM yyyy")</td>
            <td>@borrow.ReturnDeadline.ToString("dd MMMM yyyy")</td>
        </tr>
        }
    </tbody>
</table>

@if(!currentBorrows.Any())
{
    <p>Nothing to show here!</p>
}

<h4>History of borrows</h4>

<hr />

<table class="table">
    <thead>
        <tr>
            <th>Book title</th>
            <th>Borrow date</th>
            <th>Return deadline</th>
            <th>Return date</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var borrow in borrowsHistory)
        {
        <tr class="not-clickable">
            <td>@borrow.Book.Title</td>
            <td>@borrow.BorrowDate.ToString("dd MMMM yyyy")</td>
            <td>@borrow.ReturnDeadline.ToString("dd MMMM yyyy")</td>
            <td>@((DateTime)borrow.ReturnDate).ToString("dd MMMM yyyy")</td>
        </tr>
        }
    </tbody>
</table>

@if(!borrowsHistory.Any())
{
    <p>Nothing to show here!</p>
}
